
/*

6. Content recommendation
Using the following two tables, write a query to return page recommendations to a social media user based on the pages that their friends have liked, but that they have not yet marked as liked. Order the result by ascending user ID.

*/

WITH friends (user_id, friend) 
AS (VALUES
(1, 2),
(1, 3),
(1, 4),
(2, 1),
(3, 1),
(3, 4),
(4, 1),
(4, 3)),


-- The letters 'A', 'B', and 'C' represent pages.

likes (user_id, page_likes)
AS (VALUES
(1, 'A'),
(1, 'B'),
(1, 'C'),
(2, 'A'),
(3, 'B'),
(3, 'C'),
(4, 'B')),


-- For every user, determine what pages were liked by her/his friends.

friend_likes AS (
  SELECT
    friends.user_id AS user_id,
    likes.page_likes AS friend_page_likes
  FROM
    friends
  LEFT JOIN
    likes
  ON
    friends.friend = likes.user_id
  GROUP BY 1,2
),


-- For every user, compare the pages liked by that user with the pages liked by
-- her/his friends.

friends_and_you AS (
  SELECT 
    friend_likes.user_id AS user_id,
	  friend_likes.friend_page_likes AS friend_page_likes,
	  likes.page_likes AS page_likes
  FROM friend_likes LEFT JOIN likes
  ON
    friend_likes.user_id = likes.user_id
  AND
    friend_likes.friend_page_likes = likes.page_likes
)


-- Use the above comparison to determine the answers.

SELECT 
  user_id,
  friend_page_likes AS recommended_page
FROM 
  friends_and_you 
WHERE 
  page_likes IS NULL
ORDER BY 
  user_id



