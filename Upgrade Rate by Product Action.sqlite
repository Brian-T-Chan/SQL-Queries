
/*

8. Upgrade rate by product action
Given the following two tables, return the fraction of users, rounded to two decimal places, who accessed feature two and upgraded to premium within the first 30 days of signing up.

*/

WITH users (user_id, name, join_date) AS (VALUES
(1, 'Jon', '2020-02-14'),
(2, 'Jane', '2020-02-14'),
(3, 'Jill', '2020-02-15'),
(4, 'Josh', '2020-02-15'),
(5, 'Jean', '2020-02-16'),
(6, 'Justin', '2020-02-17'),
(7, 'Jeremy', '2020-02-18')),


-- F1: feature one, F2: feature two, P: premium

events (user_id, type, access_date) AS (VALUES
(1, 'F1', '2020-03-01'),
(2, 'F2', '2020-03-02'),
(2, 'P', '2020-03-12'),
(3, 'F2', '2020-03-15'),
(4, 'F2', '2020-03-15'),
(1, 'P', '2020-03-16'),
(3, 'P', '2020-03-22')),


-- Get info on users accessing feature two.

f2_events AS (
  SELECT * FROM 
    events 
  WHERE 
    type = 'F2'
),


-- Get info on users upgrading to premium.

p_events AS (
  SELECT * FROM
    events
  WHERE
    type = 'P'
)


-- Perform two left joins and use a CASE statement to determine the users that 
-- accessed F2 and upgraded to P within 30 days of their join date. Then take an
-- average to determine the answer.

SELECT 

round(AVG(CASE WHEN
            f2_events.access_date IS NOT NULL AND
            p_events.access_date IS NOT NULL AND
            CAST(julianday(f2_events.access_date) - julianday(users.join_date) AS INT) <= 30 AND
            CAST(julianday(p_events.access_date) - julianday(users.join_date) AS INT) <= 30
            THEN 1 ELSE 0 
           END), 2) AS upgrade_rate
FROM
  users 
LEFT JOIN 
  f2_events 
ON users.user_id = f2_events.user_id
LEFT JOIN
  p_events
ON users.user_id = p_events.user_id


